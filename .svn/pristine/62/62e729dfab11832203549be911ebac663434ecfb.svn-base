<template>
<div class="page-wrapper">
    <el-container>
        <common-left-tree title="产品导航" :isHeader='true' :data="treeData" :searchText='searchText' @click-item="onTreeClickItem" class="left-tree">
            <div slot="head-search" class="head-search">
                <el-input placeholder="请输入内容" prefix-icon="el-icon-search" v-model="searchText"></el-input>
            </div>
        </common-left-tree>
        <el-main>
            <el-card class="box-card" shadow="never">
                <div slot="header" class="clearfix">
                    <span class="primary">监控状态</span>
                </div>
                <div class="text">
                    <div class="list">
                        <page-table ref="table" remote="requestPublishList" :formatPayload="formatPayload">
                            <div class="actions" slot="actions">
                                <span class="title">产品名称：</span>
                                <el-input v-model="query.productInfoName" clearable placeholder="请输入产品名称"></el-input>
                                <span class="title">制作人：</span>
                                <el-input v-model="query.publishUser" clearable placeholder="请输入制作人"></el-input>
                                <span class="title">发布时间：</span>
                                <!-- <el-time-select
                                    v-model="query.publishTime"
                                    :picker-options="{
                                        start: '08:30',
                                        step: '00:15',
                                        end: '18:30'
                                    }"
                                    placeholder="选择时间">
                                </el-time-select> -->
                                <el-date-picker v-model="query.time" type="daterange" format="yyyy-MM-dd" value-format="yyyy-MM-dd" range-separator="至" start-placeholder="开始日期" end-placeholder="结束日期">
                                </el-date-picker>
                                <!-- <span class="title">行政级别：</span>
                                <el-select v-model="query.XXXPROP_AREA_name" clearable placeholder="请选择">
                                    <el-option label="地级市" value="city"></el-option>
                                    <el-option label="区/县" value="county"></el-option>
                                </el-select> -->
                                <span class="title">内容：</span>
                                <el-input v-model="query.content" clearable placeholder="请输入名称"></el-input>
                                <c-button type="search" @click="search()">搜索</c-button>
                                <!-- <c-button type="add" @click="onTreeAppend({})">添加</c-button> -->
                            </div>
                            <el-table-column prop="" label="序列" width="60px" type="index"></el-table-column>
                            <el-table-column prop="productInfoName" label="产品名称" width="200px"/>
                            <el-table-column prop="createUser" label="制作人" width="120px"/>
                            <el-table-column prop="createTime" label="制作时间"/>
                            <el-table-column prop="publishUser" label="发布人" width="120px"/>
                            <el-table-column prop="publishTime" label="发布时间"/>
                            <!-- <el-table-column prop="XXXPROP_AREA_5" label="发布监控" /> -->
                            <el-table-column prop label="发布监控" width="100px">
                                <template slot-scope="scope">
                                    <el-button size="mini"  type="primary" plain @click="clickItem(scope.row)">
                                        <span class="">监控</span>
                                    </el-button> 
                                </template>
                            </el-table-column>
                            <el-table-column prop label="内容查看" width="300px">
                                <template slot-scope="scope">
                                    <el-button size="mini"  type="primary" plain>
                                        <span class="">PDF</span>
                                    </el-button> 
                                    <el-button size="mini"  type="primary" plain>
                                        <span class="">WORD</span>
                                    </el-button> 
                                    <el-button size="mini"  @click="clickItemTxt(scope.row)" type="primary" plain>
                                        <span class="">TXT</span>
                                    </el-button> 
                                </template>
                            </el-table-column>
                            <el-table-column prop label="操作" width="200px">
                                <template slot-scope="scope">
                                    <!-- <el-link target="_blank" :href="" :underline="false" style="margin-left:15px">
                                        <el-button size="mini" type="warning">下载</el-button>
                                    </el-link> -->
                                    <span class="" @click="clickDownload(scope.row)">下载</span>
                                    <c-button type="del">
                                        <span class="text-danger">失败重发</span>
                                    </c-button>
                                    <c-button type="del">
                                        <span class="text-danger">全部重发</span>
                                    </c-button>
                                    <!-- <el-button size="mini" type="text" size="small" @click="inputItem(scope.row)">编辑</el-button>
                                    <c-button type="del" @click="onConfirmDelete(scope.row)">
                                        <span class="text-danger">删除</span>
                                    </c-button> -->
                                </template>
                            </el-table-column>
                        </page-table>
                    </div>
                </div>
            </el-card>
        </el-main>
    </el-container>
    <c-dialog class="txt" title="内容查看" :visible.sync="visibleDialogFormItemTxt" :primary-text="null" :secondary-text="'关闭'" width="600px">
        <div class="content">
            <el-input
                type="textarea"
                :rows="20"
                v-model="contentTxt"
                :disabled="true"
                >
            </el-input>
        </div>
    </c-dialog>
     <dialog-form title="产品标签导航" :visible.sync="visibleDialogFormLeftTree" :getPayload="()=>formLeftTree" :confirmDisabled="!formLeftTree.label||formLeftTree.label.legend==0||formLeftTree.parentId===undefined" remote="requestDialogFormDictTypeInput1"
      v-if="formLeftTree">
        <!-- <template>
            <el-form-item label="分类名称" label-width="120px">
                <el-input v-model="formLeftTree.label" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="分类编码" label-width="120px">
                <el-input v-model="formLeftTree.XXXPROPDICTTYPE_1" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="上级类型" label-width="120px">
                <el-select v-model="formLeftTree.parentId" placeholder="请选择">
                    <el-option label="数据字典" :value="null"></el-option>
                    <el-option label="叶子结点1" value="leaf1"></el-option>
                    <el-option label="叶子结点2" value="leaf2"></el-option>
                    <el-option labels="可展开类目1" value="zone1"></el-option>
                    <el-option label="可展开类目2" value="zone2"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="排序" label-width="120px">
                <el-input v-model="formLeftTree.XXXPROPDICTTYPE_2" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="描述" label-width="120px">
                <el-input v-model="formLeftTree.XXXPROPDICTTYPE_3" autocomplete="off" type="textarea" :autosize="{ minRows: 2, maxRows: 6}"></el-input>
            </el-form-item>
        </template> -->
    </dialog-form>
    <!-- <dialog-form title="地区" :visible.sync="visibleDialogFormItem" :getPayload="()=>formItem" :confirmDisabled="!formItem.XXXPROP_AREA_1" remote="requestDialogFormAreaItemInput" v-if="formItem">
        <template>
            <el-form-item label="地区名称" label-width="120px">
                <el-input v-model="formItem.XXXPROP_AREA_1" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="地区编码" label-width="120px">
                <el-input v-model="formItem.XXXPROP_AREA_2" autocomplete="off"></el-input>
            </el-form-item>
            <el-form-item label="行政级别" label-width="120px">
                <el-select v-model="formItem.XXXPROP_AREA_3" placeholder="请选择">
                    <el-option label="地级市" value="city"></el-option>
                    <el-option label="区/县" value="county"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="上级地区" label-width="120px">
                <el-select v-model="formItem.XXXPROP_AREA_4" placeholder="请选择">
                    <el-option label="浙江省" value="330000"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="描述" label-width="120px">
                <el-input v-model="formItem.XXXPROP_AREA_6" autocomplete="off" type="textarea" :autosize="{ minRows: 2, maxRows: 6}"></el-input>
            </el-form-item>
        </template>
    </dialog-form> -->
    <c-dialog title="状态监控" :visible.sync="visibleDialogFormItem" :primary-text="null" :secondary-text="'关闭'" width="80%">
        <trace-main :data="formItem" v-if="visibleDialogFormItem"></trace-main>
    </c-dialog>
</div>
</template>

<script>
import {
    requestDictListDelItem,
    requestProductInfoTpyeTreeList,
    requesProductMadeDown
} from "@/remote/";
import {
    common,
    witchCommonList,
    withCommonLeftTree
} from '../../mixins/index';
import traceMain from './components/trace-main';
export default {
    mixins: [common, witchCommonList, withCommonLeftTree],
    components: {
        traceMain
    },
    data() {
        return {
            visibleDialogFormItemTxt:false,
            contentTxt:null,
            searchText:null,
            treeData:[],
            query: {
                // XXXPROP_AREA_id: "",
                // XXXPROP_AREA_name: ""
                publishUser:null
            }
        };
    },
    computed: {
        actionOfListDelItem() {
            return requestDictListDelItem;
        }
    },
    mounted(){
        this.requestData()
    },
    watch:{
            query:{
            handler(val, oldVal){
                if(val.time){
                    this.query.startTime = val.time[0],
                    this.query.endTime = val.time[1]
                }else{
                    this.query.startTime = null,
                    this.query.endTime = null
                }
            },
            deep:true
        }
    },
    methods: {
    clickItemTxt(data){
        this.visibleDialogFormItemTxt = true
        this.contentTxt = data.content
    },
    clickDownload(data){
        let param = {
            fileName:data.fileName,
            filePath:data.filePath
        }
        requesProductMadeDown(param).then(res=>{
            this.$message.success("下载完成");
        })
        // window.location.href= `http://192.168.5.105:6002/ssd/product/ssd-file-operate/download?fileName=${data.fileName}&filePath=${data.filePath}`
    },
    clickItem(data){
        if(data.publish == 0){
            this.$message.warning("产品未发布！");
            return
        }
        this.inputItem(data)
    },
    handleNodeClick(){},
      //初始化页面数据
      requestData(){
        requestProductInfoTpyeTreeList().then(res => {
          this.treeData = res.data.list
        });
      },
        getFormItemByInputItem(item = {}) {
            const {
                lastItemClicked
            } = this;
            const lastKeyItemClicked = lastItemClicked && lastItemClicked.id;
            return {
                // "XXXPROP_AREA_id": "",
                "productInfoName": "",
                "createTime": "",
                "publishTime": "",
                // "XXXPROP_AREA_4": lastKeyItemClicked,
                "publishUser": '',
                // "XXXPROP_AREA_5": "",
                "XXXPROP_AREA_6": "",
                lastItemClicked,
                ...item
            };
        },
        getFormItemLeftByInputItem() {
            const {
                lastItemClicked
            } = this;
            // return item ? item : {
            //     label: "",
            //     parentId: lastItemClicked.id,
            //     parent: lastItemClicked
            // };
            return {111:123}
        },
    }
};
</script>
<style scoped>
.page-wrapper{
    .txt{
        .content{
            min-height: 400px;
            min-width: 400px;
            .el-input {
                height: 400px;
                width: 400px;
            }
        }
    }
}
</style>
