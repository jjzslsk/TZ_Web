import {
    generateGet,
    generatePost,
    generateDelete,
    generatePostJSON,
    generateDownload
} from '@/common/request';
import * as vender from './vender'
import * as dataSupply from './data-supply'
import { Alert } from 'element-ui';

const dataStaticBase = './static/data/';

const commonSuccess = dataStaticBase + 'common-success.json';

const hostEvn = `/ssd`;
// const hostEvn = `/mock/5e66e75b05444c01765c36a7/mgr-service/mgr-service`;
// const hostEvn = `/boot`;

const transformUrlWithEnv = url => url.replace(/{{host}}/g, hostEvn)

const HeadersToken = {
    localData: function() {
        const loginData = JSON.parse(localStorage.getItem('loginData'))
        if (loginData !== null) {
            if (loginData.jwt !== null) {
                if (loginData.jwt.access_token !== null) {
                    var tokenInfo = loginData.jwt.access_token
                }
            }
        } else {
            console.log(loginData)
        }
        // if(loginData.jwt !== null || loginData.jwt !== undefined || loginData.jwt !== ''){console.log(loginData.jwt)}else{console.log('null')}
        // if(!loginData.jwt.access_token){
        //     localStorage.clear();
        //     vm.$router.push({
        //         'name': 'login'
        //       });
        // }
        return tokenInfo || null
    }
}

const transformConfig = url => ({
    url: transformUrlWithEnv(url),
    setHeaders: () => ({'Authorization': HeadersToken.localData()})
})

export const localStorageToken = HeadersToken.localData()

const generateGetWithEvn = url => generateGet(transformUrlWithEnv(url))
const generateDeleteWithEvn = url => generateDelete(transformUrlWithEnv(url))
const generateDeleteWithEvnToken = url => generateDelete(transformConfig(url))
// const generateDeleteWithEvn = url => generateGet(transformUrlWithEnv(url))
const generateGetWithEvnToken = url => generateGet(transformConfig(url))
const generatePostWithEvnToken = url => generatePost(transformConfig(url))
const generatePostWithEvn = url => generatePost(transformUrlWithEnv(url))
const generatePostJSONWithEvn = url => generatePostJSON(transformUrlWithEnv(url))
const generatePostJSONWithEvnToken = url => generatePostJSON(transformConfig(url))
const generateDownloadWithEvn = url => generateDownload(transformUrlWithEnv(url))

const generateGetGeojson = url => generateGet({
    url,
    transformResponse: [function (res) {
        const data = JSON.parse(res);
        return {
            "success": !!data,
            data
        };
    }]
});

// common
export const urlImageUploadPoint = generateGet(commonSuccess);
export const requestAreas = generateGet(commonSuccess);
export const requestChangePassword = generateGet(commonSuccess);

// geojson

// page

// requests
// 获取省geojson
export const requestGeojsonOfKey = data => generateGetGeojson(`/static/data/geojson/taizhou/${data.key}.geojson`)(data)

// 登录
export const requestLogin = generatePostWithEvn('{{host}}/mgr-service/ssd-sys-user/login');
// export const requestLogin = generatePostWithEvn(dataStaticBase + 'login.json');

// export const requestLogin = generatePostWithEvn(commonSuccess);

// 获取用户信息
export const requestMyAccountInfo = generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-user/selectUserById');
// export const requestMyAccountInfo = generatePostWithEvn(dataStaticBase + 'get-userInfo.json');
// export const requestLogin = generatePostWithEvn(commonSuccess);

// 获取头部菜单列表
export const requestMenu = generateGetWithEvnToken(dataStaticBase + 'menu.json');
// export const requestMenu = generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-menu/selectMenuTree');

// 退出 GET /ssd-sys-user/logout
export const requestLogout = generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-user/logout');
// export const requestLogout = generateGet(commonSuccess);

// 产品制作-分组左侧导航 /ssd-product-template-type/getDataTree
// export const requestProductClassTreeList = generateGetWithEvn(dataStaticBase + 'product-tree.json');
export const requestProductClassTreeList = generateGetWithEvn('{{host}}/product/ssd-product-template-type/getDataTree');

// 产品制作-左侧标签tabs列表
export const requestProductTabsList = generateGetWithEvn(dataStaticBase + 'product-tabs-list.json');
// export const requestProductTabTreeList = generateGetWithEvn('{{host}}/product/ssd-product-template-type/getDataTree');

// 产品制作-中部标签tabs列表
export const requestProductReferenceTabsList = generateGetWithEvn(dataStaticBase + 'reference.json');

// 产品制作-中部标签业务规范列表
export const requestrulesList = generateGet(dataStaticBase + 'rules-tabs.json');

// 产品制作-左侧标签tree
export const requestProductTabTreeList = generateGetWithEvn(dataStaticBase + 'product-tab-tree.json');
// export const requestProductTabTreeList = generateGetWithEvn('{{host}}/product/ssd-product-template-type/getDataTree');

// 产品制作-添加分类
export const requestDialogFormAreaTreeInput = payload => {
    return payload.id ? generatePostWithEvn('{{host}}/product/ssd-product-template-type/updateArea')(payload) : generatePostWithEvn('{{host}}/product/ssd-product-template-type/add')(payload)
};

// 产品制作-删除分类 POST /ssd-product-template-type/delete
export const requestProductClassTreeDel = generatePostWithEvn('{{host}}/product/ssd-product-template-type/delete');

// 获取导航列表
export const requestRouterList = generateGet(dataStaticBase + 'router.json');

// 获取字典管理列表
// export const requestDictList = generateGet(dataStaticBase + 'dict-page.json');
export const requestDictList = generateGetWithEvnToken(`{{host}}/mgr-service/ssd-sys-dictionary/selectDictionaryTreeListById`);
// 获取字典左侧导航  selectDictionaryTypeTree
export const requestDictTree = payload => generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-dictionary-type/selectDictionaryTypeTree')(payload).then(res => {
    const dataList = res.data.list
    function remoteData(list) {
        list.map((item) => {
            item.label = item.name
            item.isLeaf = item.ifLeaf
            delete item.ifLeaf
            delete item.name
            if (item.children) {
                remoteData(item.children)
            }
        })
        return list
    }
    const data = remoteData(dataList)
    return {data}
});

// 删除字典管理列表数据
// export const requestDictListDelItem = generateGetWithEvn(dataStaticBase + 'submit-success.json');
export const requestDictListDelItem = generateDeleteWithEvnToken(`{{host}}/mgr-service/ssd-sys-dictionary/deleteDictionaryById`);
// 新增字典数据
// export const requestDictInputCreate = generateGetWithEvn(dataStaticBase + 'submit-success.json');
// 修改字典数据
// export const requestDictInputUpdate = generateGetWithEvn(dataStaticBase + 'submit-success.json');

// 字典条目添加，编辑弹窗确认请求 addDictionary
// export const requestDialogFormDictItemInput = generatePostWithEvn(dataStaticBase + 'submit-success.json');
// export const requestDialogFormDictItemInput = generatePostWithEvn(`{{host}}/ssd-sys-dictionary/addDictionary`);
export const requestDialogFormDictItemInput = payload => {
    return payload.id ? generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-dictionary/updateDictionary')(payload) : generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-dictionary/addDictionary')(payload)
};
// 字典类型，根据node获取子结点数据 GET /ssd-sys-dictionary-type/selectDictionaryTypeTree
// export const requestTreeChildrenOfDictNode = payload => generateGetWithEvn('{{host}}/mgr-service/ssd-sys-dictionary-type/selectDictionaryTypeTree')(payload).then(res => {
//     const menuList = res.data.list
//     function remoteData(list){
//         list.map((item)=>{
//             item.label = item.name
//             item.isLeaf = item.ifLeaf
//             delete item.ifLeaf
//             delete item.name
//             if(item.children){
//                 remoteData(item.children)
//             }
//         })
//          return list
//     }
//     const data = remoteData(menuList)
//     return {data}
// });
export const requestTreeChildrenOfDictNode = payload => generateGetWithEvn(dataStaticBase + 'common-success.json')(payload.node.data).then(res => {
    const {node} = payload;
    if (node.level === 0) {
        return {data: [{
            id: null,
            label: '数据字典'
        }]};
    }
    // if (node.level > 1) return resolve([]);
    if (node.data.isLeaf) {
        return {data: []};
    }

    const data = [{
        id: "leaf" + node.level,
        label: '叶子结点' + node.level,
        isLeaf: true
    }, {
        id: "zone" + node.level,
        label: '可展开类目' + node.level
    }].map(item => ({
        parentId: node.data.id,
        ...item
    }));

    return {data}
})

// 删除字典类型
export const requestDictListDelType = generateDeleteWithEvnToken('{{host}}/product/ssd-product-template-type/delete');

// 字典类型添加子结点，编辑结点弹窗确认请求 POST /ssd-product-template-type/update
export const requestDialogFormDictTypeInput = payload => {
    return payload.id ? generatePostWithEvnToken('{{host}}/product/ssd-product-template-type/update')(payload) : generatePostWithEvnToken('{{host}}/product/ssd-product-template-type/add')(payload)
};
export const requestDialogFormDictTypeInput1 = generateGetWithEvn(dataStaticBase + 'product-tabs-list1.json');
// export const requestDialogFormDictTypeInput = generateGetWithEvn(dataStaticBase + 'common-failed.json');

// 地区管理
// 地区信息，根据node获取子结点数据 GET /ssd-sys-area/selectAreaTreeList
export const requestTreeChildrenOfAreaNode = payload => generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-area/selectAreaTreeList')(payload).then(res => {
    const dataList = res.data.list
    function remoteData(list) {
        list.map((item) => {
            item.label = item.name
            item.isLeaf = item.ifLeaf
            delete item.ifLeaf
            delete item.name
            if (item.children) {
                remoteData(item.children)
            }
        })
        return list
    }
    const data = remoteData(dataList)
    console.log('1:', data)
    return {data}
});
// export const requestTreeChildrenOfAreaNode = payload => generateGetWithEvn(dataStaticBase + 'common-success.json')(payload.node.data).then(res => {
//     const {node} = payload;
//     if (node.level === 0) {
//         return {data: [{
//             id: '330000',
//             label: '浙江省'
//         }]};
//     }
//     if (node.level > 5) {
//         return {data: []};
//     }
//     if (node.data.isLeaf) {
//         return {data: []};
//     }

//     const data = [{
//         id: "leaf" + node.level,
//         label: '叶子结点' + node.level,
//         isLeaf: true
//     }, {
//         id: "zone" + node.level,
//         label: '可展开类目' + node.level
//     }].map(item => ({
//         parentId: node.data.id,
//         ...item
//     }));

//     return {data}
// });
// 获取地区管理列表 GET GET /ssd-sys-area/selectAreaTreeListByUser
// export const requestAreaList = generateGet(dataStaticBase + 'area-page.json');
export const requestAreaList = generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-area/selectAreaTreeListByUser');

// 新增地区管理列表数据 addArea updateArea
export const requestDialogFormAreaItemInput = payload => {
    return payload.id ? generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-area/updateArea')(payload) : generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-area/addArea')(payload)
};

// 删除地区管理列表数据 DELETE /ssd-sys-area/deleteAreaById
export const requestAreaListDelItem = generateDeleteWithEvnToken('{{host}}/mgr-service/ssd-sys-area/deleteAreaById');

// 机构管理左侧导航tree GET /ssd-sys-org/selectOrgTreeByUserId
export const requestTreeChildrenOfOrganNode = payload => generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-org/selectOrgTreeByUserId')(payload).then(res => {
    const dataList = res.data.list
    function remoteData(list) {
        list.map((item) => {
            item.label = item.name
            item.isLeaf = item.ifLeaf
            delete item.ifLeaf
            delete item.name
            if (item.children) {
                remoteData(item.children)
            }
        })
        return list
    }
    const data = remoteData(dataList)
    return {data}
});
// 获取机构管理列表
// export const requestOrganList = generateGet(dataStaticBase + 'organ-page.json');
export const requestOrganList = generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-org/selectOrgTreeList');

// 机构弹窗 addOrg
export const requestDialogFormOrganItemInput = payload => {
    return payload.id ? generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-org/updateOrg')(payload) : generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-org/addOrg')(payload)
};

// 删除机构管理列表数据
export const requestOrganListDelItem = generateDeleteWithEvnToken('{{host}}/mgr-service/ssd-sys-org/deleteOrgById');

// 菜单管理
// 菜单类型，根据node获取子结点数据
// export const requestTreeChildrenOfDutyPostNode = payload => generateGetWithEvn(dataStaticBase + 'common-success.json')(payload.node.data).then(res => {
export const requestTreeChildrenOfMenuNode = payload => generateGetWithEvn('{{host}}/mgr-service/ssd-sys-menu/selectMenuTree')(payload).then(res => {
    const menuList = res.data.list
    function remoteData(list) {
        list.map((item) => {
            item.label = item.name
            item.isLeaf = item.ifLeaf
            delete item.ifLeaf
            delete item.name
            if (item.children) {
                remoteData(item.children)
            }
        })
        return list
    }
    const data = remoteData(menuList)
    return {data}
});
// export const requestTreeChildrenOfMenuNode = payload => generateGetWithEvn(dataStaticBase + 'common-success.json')(payload.node.data).then(res => {
//     const {node} = payload;
//     if (node.level === 0) {
//         return {data: [{
//             id: '',
//             label: '模块管理'
//         }]};
//     }
//     // if (node.level > 1) return resolve([]);
//     if (node.data.isLeaf) {
//         return {data: []};
//     }

//     const data = [{
//         id: "leaf" + node.level,
//         label: '叶子结点' + node.level,
//         isLeaf: true
//     }, {
//         id: "zone" + node.level,
//         label: '可展开类目' + node.level
//     }].map(item => ({
//         parentId: node.data.id,
//         ...item
//     }));

//     return {data}
// });
// 获取菜单管理列表
export const requestMenuList = generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-menu/selectMenuList');
// 删除菜单管理列表数据
export const requestMenuListDelItem = generateDeleteWithEvnToken('{{host}}/mgr-service/ssd-sys-menu/deleteMenuById');
// export const requestMenuListDelItem = generateGetWithEvn(dataStaticBase + 'submit-success.json');

// 菜单弹窗提交数据
// export const requestDialogFormMenuItemInput =  generatePostWithEvn('{{host}}/mgr-service/ssd-sys-menu/updateMenu');
export const requestDialogFormMenuItemInputAdd = generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-role/addRole');
export const requestDialogFormMenuItemInputUpdate = generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-role/updateRole');
// export const requestDialogFormMenuItemInput = payload => {
//     return  payload.id? generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-menu/addMenu')(payload): generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-menu/updateMenu')(payload)
// };
// export const requestDialogFormUserItemInput = generateGetWithEvn(dataStaticBase + 'submit-success.json'); addMenu updateMenu

// 用户管理
// 获取用户管理列表
export const requestUserList = generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-user/selectUserTreeList');
export const requestUserList1 = generateGet(dataStaticBase + 'user-page.json');

// 删除用户管理列表数据 /ssd-sys-user/deleteUserById
export const requestUserListDelItem = generateDeleteWithEvnToken('{{host}}/mgr-service/ssd-sys-user/deleteUserById');
// 用户弹窗提交数据
export const requestDialogFormUserItemInput = payload => {
    return payload.id ? generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-user/updateUser')(payload) : generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-user/addUser')(payload)
};
// export const requestDialogFormUserItemInput = generatePostWithEvn('{{host}}/mgr-service/ssd-sys-user/addUser');
// export const requestDialogFormUserItemInput = generateGetWithEvn(dataStaticBase + 'submit-success.json');

// 角色管理
// 获取角色管理列表 GET /ssd-sys-role/selectRoleTreeList
// export const requestRoleList = generateGet(dataStaticBase + 'role-page.json');
export const requestRoleList = generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-role/selectRoleTreeList');

// 获取所有角色 GET /ssd-sys-role/selectRoleList
export const requestRoleListItem = generateGetWithEvnToken('{{host}}/mgr-service/ssd-sys-role/selectRoleList');

// 删除角色管理列表数据
// export const requestRoleListDelItem = generateGetWithEvn(dataStaticBase + 'submit-success.json');
export const requestRoleListDelItem = generateDeleteWithEvnToken('{{host}}/mgr-service/ssd-sys-role/deleteRoleById');
// 角色弹窗提交数据
export const requestDialogFormRoleItemInput = generatePostWithEvnToken('{{host}}/mgr-service/ssd-sys-role/addRole');
// export const requestDialogFormRoleItemInput = generateGetWithEvn(dataStaticBase + 'submit-success.json');
// 菜单授权获取数据
// export const requestAuthList = generateGet(dataStaticBase + 'auth-list.json');
export const requestAuthList = payload => generateGetWithEvn(dataStaticBase + 'router.json')(payload).then(res => {
    // const {node} = payload;
    // if (node.level === 0) {
    //     return {data: [{
    //         id: '',
    //         label: '模块管理'
    //     }]};
    // }
    // // if (node.level > 1) return resolve([]);
    // if (node.data.isLeaf) {
    //     return {data: []};
    // }

    // const data = [{
    //     id: "leaf" + node.level,
    //     label: '叶子结点' + node.level,
    //     isLeaf: true
    // }, {
    //     id: "zone" + node.level,
    //     label: '可展开类目' + node.level
    // }].map(item => ({
    //     parentId: node.data.id,
    //     ...item
    // }));
    let test = {
        "code": 0,
        "success": true,
        "message": "请求成功",
        "data": {
            "list": [{
                "XXXPROP_AUTH_id": 1,
                "XXXPROP_AUTH_NAME": "首页111",
                "XXXPROP_AUTH_CHECKED": true
            }, {
                "XXXPROP_AUTH_id": 2,
                "XXXPROP_AUTH_NAME": "产品制作2",
                "XXXPROP_AUTH_CHECKED": true,
                "XXXPROP_AUTH_id_LVL_2": "cpzz-lcjk2",
                "XXXPROP_AUTH_NAME_LVL_2": "流程监控2",
                "XXXPROP_AUTH_CHECKED_LVL_2": false
            }, {
                "XXXPROP_AUTH_id": 2,
                "XXXPROP_AUTH_NAME": "产品制作3",
                "XXXPROP_AUTH_CHECKED": true,
                "XXXPROP_AUTH_id_LVL_2": "cpzz-cpzz3",
                "XXXPROP_AUTH_NAME_LVL_2": "产品制作3",
                "XXXPROP_AUTH_CHECKED_LVL_2": true
            }, {
                "XXXPROP_AUTH_id": 4,
                "XXXPROP_AUTH_NAME": "产品制作4",
                "XXXPROP_AUTH_CHECKED": true,
                "XXXPROP_AUTH_id_LVL_2": "cpzz-cppz4",
                "XXXPROP_AUTH_NAME_LVL_2": "产品配置4",
                "XXXPROP_AUTH_CHECKED_LVL_2": true,
                "XXXPROP_AUTH_CHILDREN": [{
                    "label": "产品属性管理4-1",
                    "value": "cpsxgl4-1",
                    "checked": true
                }, {
                    "label": "产品模板管理4-2",
                    "value": "cpmbgl4-2",
                    "checked": false
                }]
            }]
        }
    }
    let test1 = {
        "code": 0,
        "success": true,
        "message": "请求成功",
        "data": {
            list: [
                {
                    XXXPROP_AUTH_id: 1,
                    XXXPROP_AUTH_pid: 1,
                    XXXPROP_AUTH_NAME: "首页111",
                    XXXPROP_AUTH_CHECKED: true
                }
            ]
        }
    }
    res.data.list.forEach(item => {
        test1.data.list.push({
            XXXPROP_AUTH_id: item.id,
            XXXPROP_AUTH_pid: item.pid,
            XXXPROP_AUTH_NAME: item.name,
            XXXPROP_AUTH_CHECKED: item.checked
        })
    })

    let additional = []
    res.data.list.forEach((item, index) => {
        if (item.children) {
            item.children.forEach((i, childIndex) => {
                // i.pid
            })
            // item.children.forEach(items =>{  //拿到第一个children
            //     test1.data.list.forEach((i,index) =>{
            //         if(toString(i.XXXPROP_AUTH_pid) == toString(items.pid)){ //对比一级XXXPROP_AUTH_pid
            //             test1.data.list.splice(index,0,{name:'a'})
            //                     // console.log(index)
            //         }

            //     })
            //     // console.log(items.pid)
            // })
        }
    })

    console.log('123:', test1.data.list)
    return test1
});

// 综合管理
// 综合管理首页
// 历史交接班
export const requestIntegratedHoneHistoryList = generateGetWithEvn('{{host}}/business/ssd-business-index/SsdBusinessIndexHistory');
// 值班表 GET /ssd-business-index/getSsdBusinessIndexDuty
export const requestIntegratedHoneDutyList = generateGetWithEvn('{{host}}/business/ssd-business-index/getSsdBusinessIndexDuty');
// 值班流程信息 GET /ssd-business-index/getSsdBusinessIndex_DutyTask
export const requestIntegratedHoneDutyTaskList = generateGetWithEvn('{{host}}/business/ssd-business-index/getSsdBusinessIndex_DutyTask');

// 值班管理
// 岗位管理
// 获取岗位管理列表 GET /ssd-business-job/getSsdBusinessJob
export const requestPostList = generateGetWithEvn('{{host}}/business/ssd-business-job/getSsdBusinessJob');
// export const requestPostList = generateGet(dataStaticBase + 'getSsdBusinessJob.json');

// 岗位 获取值班用户列表
export const requestPostUserList = generateGetWithEvn('{{host}}/business/ssd-business-job/getUserInfo');

// 删除岗位管理列表数据 GET /ssd-business-job/deleteSsdBusinessJob
// export const requestPostListDelItem = generateGetWithEvn(dataStaticBase + 'submit-success.json');
export const requestPostListDelItem = generateGetWithEvn('{{host}}/business/ssd-business-job/deleteSsdBusinessJob');

// 岗位弹窗提交数据 POST /ssd-business-job/addSsdBusinessJob POST /ssd-business-job/updateSsdBusinessJob
export const requestDialogFormPostItemInput = payload => {
    return payload.id ? generatePostWithEvn('{{host}}/business/ssd-business-job/updateSsdBusinessJob')(payload)
        : generatePostWithEvn('{{host}}/business/ssd-business-job/addSsdBusinessJob')(payload)
};
// export const requestDialogFormPostItemInput = generateGetWithEvn(dataStaticBase + 'submit-success.json');

// 历史交接班记录
// 历史交接班记录分页列表数据 GET /ssd-business-handover/ssd_Business_Handover
export const requestHistoryList = generateGetWithEvn('{{host}}/business/ssd-business-handover/ssd_Business_Handover');
// export const requestHistoryList = generateGet(dataStaticBase + 'history-page.json'); GET /ssd-business-handover/getType

// 历史交接班类型
export const requestHistoryGetType = generateGetWithEvn('{{host}}/business/ssd-business-handover/getType');

// 排班管理
// 排班管理分页列表数据 GET /ssd-business-duty/getSsdBusinessDuty
export const requestSchedulingList = generateGetWithEvn('{{host}}/business/ssd-business-duty/getSsdBusinessDuty');
// export const requestSchedulingList = generateGet(dataStaticBase + 'scheduling.json');
// export const requestSchedulingList = payload => generateGetWithEvn('{{host}}/business/ssd-business-duty/getSsdBusinessDuty')(payload).then(res => {
//     const menuList = res.data.list
//     // function remoteData(list){
//     //     list.map((item)=>{
//     //         item.label = item.name
//     //         item.isLeaf = item.ifLeaf
//     //         delete item.ifLeaf
//     //         delete item.name
//     //         if(item.children){
//     //             remoteData(item.children)
//     //         }
//     //     })
//     //      return list
//     // }
//     // const data = remoteData(menuList)
//     console.log('menuList::',res.data.list.list)
//     return {menuList}
// });
// export const requestSchedulingList = generateGet(dataStaticBase + 'scheduling-page.json');

// 排班管理-编辑提交数据  POST /ssd-business-duty/updateSsdBusinessDuty
export const requestSchedulingUpdate = generatePostJSONWithEvn('{{host}}/business/ssd-business-duty/updateSsdBusinessDuty');

// 排班导出
export const requestDialogFormSchedulingDownload = generateDownload(commonSuccess);

// 考勤管理
// 考勤管理分页列表数据
export const requestAttendanceList = generateGetWithEvn('{{host}}/business/ssd-business-check/getSsdBusinessCheck');
// export const requestAttendanceList = generateGet(dataStaticBase + 'attendance-page.json');

// 考勤管理编辑 POST /ssd-business-check/updateSsdBusinessCheck
export const requestAttendanceUpdate = generatePostJSONWithEvn('{{host}}/business/ssd-business-check/updateSsdBusinessCheck');
// export const requestAttendanceUpdate = generateGet(dataStaticBase + 'attendance-page.json');

// 加班管理
// 加班管理分页列表数据
// export const requestOvertimeList = payload=> generateGet(dataStaticBase + 'overtime-page.json')(payload).then(res=>{
//         const dates = payload.dates;
//         return res
// });
export const requestOvertimeList1 = generateGet(dataStaticBase + 'overtime-page.json');
export const requestOvertimeList = generateGetWithEvn('{{host}}/business/ssd-business-overtime/getSsdBusinessOvertime'); ;

// 加班管理-编辑提交数据 POST /ssd-business-overtime/updateSsdBusinessOvertime
export const requestOverUpdate = generatePostJSONWithEvn('{{host}}/business/ssd-business-overtime/updateSsdBusinessOvertime');

// 下载夜班表格
export const requestDialogFormNightDownload = generateDownload(commonSuccess);
// 获取夜班统计列表数据
// export const requestNightStaticsList = generateGet(dataStaticBase + `night-statistics-page.json`);
export const requestNightStaticsList = generateGetWithEvn('{{host}}/business/ssd-business-overtime/getSsdBusinessOvertimeCount');

// 获取夜班发放列表数据
export const requestNightDistributionList = generateGet(dataStaticBase + `night-distribution-page.json`);
// 下载应急响应表格
export const requestDialogFormNightEmergencyDownload = generateDownload(commonSuccess);

// 值班流程配置
// 岗位流程配置
// 岗位，根据node获取子结点数据 generateGetWithEvn(dataStaticBase + 'product-tree.json');
// export const requestTreeChildrenOfDutyPostNode = generateGetWithEvn(dataStaticBase + 'product-tree.json');
export const requestTreeChildrenOfDutyPostNode = generateGetWithEvn('{{host}}/business/ssd-business-job/getDataTree');
// export const requestTreeChildrenOfDutyPostNode = payload => generateGetWithEvn(dataStaticBase + 'common-success.json')(payload.node.data).then(res => {
//     const {node} = payload;
//     if (node.level === 0) {
//         return {data: [{
//             id: '',
//             label: '岗位'
//         }]};
//     }
//     // if (node.level > 1) return resolve([]);
//     if (node.data.isLeaf) {
//         return {data: []};
//     }

//     const data = [{
//         id: "leaf" + node.level,
//         label: '叶子结点' + node.level,
//         isLeaf: true
//     }, {
//         id: "zone" + node.level,
//         label: '可展开类目' + node.level
//     }].map(item => ({
//         parentId: node.data.id,
//         ...item
//     }));

//     return {data}
// });
// 获取岗位流程配置列表
// export const requestDutyPostList = generateGet(dataStaticBase + 'duty-post-page.json');
export const requestDutyPostList = payload => generateGetWithEvn('{{host}}/business/ssd-business-job-task/getJobTaskById')(payload).then(res => {
    return res
});

// 删除岗位流程配置列表数据
export const requestDutyPostListDelItem = generatePostWithEvn('{{host}}/business/ssd-business-job-task/deleteSsdBusinessJobTask');
// export const requestDutyPostListDelItem = generateGetWithEvn(dataStaticBase + 'submit-success.json');
// 岗位流程配置弹窗提交数据
// export const requestDialogFormDutyPostItemInput = generateGetWithEvn(dataStaticBase + 'submit-success.json');
// export const requestDialogFormDutyPostItemInput = generatePostJSONWithEvn('{{host}}/business/ssd-business-job-task/addSsdBusinessJobTask');

export const requestDialogFormDutyPostItemInput = payload => {
    const node = payload;
    // node.remindDay.length == 0? node.remindDay=null:node.remindDay=node.remindDay
    // node.remindWeek.length == 0? node.remindWeek=null:node.remindWeek=node.remindWeek
    // node.remindMonth.length == 0? node.remindMonth=null:node.remindMonth=node.remindMonth
    delete node.XXXPROP_DUTY_POST_X3
    console.log(node)
    return node.id ? generatePostJSONWithEvn('{{host}}/business/ssd-business-job-task/updateSsdBusinessJobTask')(node) : generatePostJSONWithEvn('{{host}}/business/ssd-business-job-task/addSsdBusinessJobTask')(node)
};

// 值班流程配置
// 获取值班流程配置列表
export const requestDutySchedulingList = generateGetWithEvn('{{host}}/business/ssd-business-duty-task/getSsdBusinessDutyTaskList');
// export const requestDutySchedulingList = generateGet(dataStaticBase + 'duty-scheduling-page.json');
// 删除值班流程配置列表数据 ssd-business-duty-task/deleteSsdBusinessDutyTask
export const requestDutySchedulingListDelItem = generatePostWithEvn('{{host}}/business/ssd-business-duty-task/deleteSsdBusinessDutyTask');
// export const requestDutySchedulingListDelItem = generateGetWithEvn(dataStaticBase + 'submit-success.json');
// 值班流程配置弹窗提交数据 POST
export const requestDialogFormDutySchedulingItemInput = payload => {
    const node = payload;
    delete node.XXXPROP_DUTY_SCHEDULING_X3
    console.log(node)
    return node.id ? generatePostJSONWithEvn('{{host}}/business/ssd-business-duty-task/updateSsdBusinessDutyTask')(node) : generatePostJSONWithEvn('{{host}}/business/ssd-business-duty-task/addSsdBusinessDutyTask')(node)
};
// export const requestDialogFormDutySchedulingItemInput = generateGetWithEvn(dataStaticBase + 'submit-success.json');

// 服务用户

// 获取服务用户左侧导航 GET /ssd-service-user-type/getDataTree
export const requestServiceUserTreeList = generateGetWithEvn('{{host}}/product/ssd-service-user-type/getDataTree');

// 获取服务用户列表
// export const requestServiceUserList = generateGet(dataStaticBase + 'product-service-user-list.json');
export const requestServiceUserList = generateGetWithEvn(`{{host}}/product/ssd-service-user/getList`);

// 获取服务用户列表删除
export const requestServiceUserListDelItem = generatePostWithEvn('{{host}}/product/ssd-service-user/delete');

// 服务用户弹窗
// export const requestServiceUserList = generateGet(dataStaticBase + 'product-service-user-list.json');
export const requestDialogFormServiceUserItemInput = payload => {
    delete payload.createTime
    delete payload.updateTime
    return payload.id ? generatePostWithEvn('{{host}}/product/ssd-service-user/update')(payload) : generatePostWithEvn('{{host}}/product/ssd-service-user/add')(payload)
};

//服务用户分类弹窗
// export const requestServiceUserList = generateGet(dataStaticBase + 'product-service-user-list.json');
export const requestDialogFormServiceUserInput = payload => {
    payload.pid == 'null' ? delete payload.pid : payload.pid = payload.pid
    delete payload.createTime
    delete payload.updateTime
    return payload.id ? generatePostWithEvn('{{host}}/product/ssd-service-user-type/update')(payload) : generatePostWithEvn('{{host}}/product/ssd-service-user-type/add')(payload)
};

//服务用户分类删除
export const requestServiceUserTreeListDelItem  = generatePostWithEvn('{{host}}/product/ssd-service-user-type/delete');

//产品标签
//获取产品标签左侧导航
export const requestProductLabelTreeList = payload => generateGetWithEvn('{{host}}/product/ssd-product-label-type/getDataTree')(payload).then(res => {
    let treeData = res
    function changeName(tree) {
        tree.map(item => {
            item.label = item.name
            if (item.children) {
                changeName(item.children)
            }
        })
    }
    changeName(treeData.data.list)
    return treeData
})

// export const requestProductLabelTreeList = generateGetWithEvn(dataStaticBase + 'product-tree.json');

// 获取产品标签列表
export const requestProductLabelList = generateGetWithEvn('{{host}}/product/ssd-product-label-detail/getList');

// 获取产品标签列表删除
export const requestProductLabelListDelItem = generatePostWithEvn('{{host}}/product/ssd-product-label-detail/delete');

// 产品标签弹窗
export const requestDialogFormProductLabelItemInput = payload => {
    // const node = payload;
    delete payload.createTime
    delete payload.updateTime
    // console.log(node)
    return payload.id ? generatePostWithEvn('{{host}}/product/ssd-product-label-detail/update')(payload) : generatePostWithEvn('{{host}}/product/ssd-product-label-detail/add')(payload)
};

// 产品标签分类弹窗
export const requestDialogFormProductLabelTreeItemInput = payload => {
    // const node = payload;
    // delete payload.createTime
    // delete payload.updateTime
    delete payload.label
    console.log(payload)
    return payload.id ? generatePostWithEvn('{{host}}/product/ssd-product-label-type/update')(payload) : generatePostWithEvn('{{host}}/product/ssd-product-label-type/add')(payload)
};

// 产品标签分类删除  POST /ssd-product-label-type/delete
export const requestProductLabelTreeListDelItem = generatePostWithEvn('{{host}}/product/ssd-product-label-type/delete');

// 天气警报
// 天气警报-天气警报追溯 列表
export const requestTracewarningList = generateGet(dataStaticBase + 'warning-trace-page.json');
// 天气警报-天气警报追溯 弹窗 状态列表
export const requestTraceDialogList = generateGet(dataStaticBase + 'warning-trace-dialog-page.json');

// 天气警报制作
// 获取已发送预警列表
// export const requestGetAlarms = generateGet(dataStaticBase + 'alarms.json');
export const requestGetAlarms = generateGetWithEvn(`{{host}}/warning/ssd-early-warning-publish/getDataOfToday`);
// 获取弹窗用户列表
// export const requestMakeDialogTabTreeList = generateGet(dataStaticBase + 'make-dialog-tab-tree.json');
export const requestMakeDialogTabTreeList = payload => generateGetWithEvn('{{host}}/product/ssd-product-info-user/getTree')(payload).then(res => {
    res.data.list = res.data.treeList;
    return res
})
// 获取左侧列表
export const requestSelectorList = generateGetWithEvn(`{{host}}/warning/ssd-early-alarm/getAll`);
// 弹窗发布确认
export const requestDialogFormWeatherSend = payload => {
    return generatePostWithEvn('{{host}}/warning/ssd-early-alarm-publish/add')(payload).then(res => {
        return generatePostWithEvn('{{host}}/warning/ssd-early-alarm-publish/addTaskAndDetail')({
            pid: res.data.id,
            ...payload})
    })
};

// 天气警报-预警信号追溯 列表
export const requestTracealarmList = generateGet(dataStaticBase + 'warning-trace-alarm-page.json');
