SCHEDULING<template>
<div class="page-wrapper scheduling">
    <el-container>
        <el-main>
            <el-card class="box-card" shadow="never">
                <div slot="header" class="clearfix">
                    <span class="primary">排班管理</span>
                </div>
                    <div class="content-list">
                        <page-table ref="table" remote="requestSchedulingList" :height="'600'" :formatPayload="formatPayload" :hidePagination="true" :row-class-name="tableRowClassName">
                        <!-- <page-table ref="table" :formatPayload="formatPayload" :row-class-name="tableRowClassName"> -->
                            <div class="actions" slot="actions">
                                <span class="title">选择月份</span>
                                <el-date-picker v-model="query.monthTime" format="yyyy-MM" value-format="yyyy-MM" type="month" placeholder="选择月"></el-date-picker>
                                <c-button type="search" @click="search()">查询</c-button>
                                <c-button type="search" v-if="!editCol" @click="editCol=!editCol">编辑</c-button>
                                <c-button v-if="editCol" @click="cancelEdit">取消</c-button>
                                <c-button type="search" v-if="editCol" @click="submitEdit">保存</c-button>
                                    <c-button  type="search" @click="inputItem()">导入</c-button>
                                    <c-button type="search" @click="downloadExcel()">导出</c-button>
                                    <c-button type="search">打印</c-button>
                            </div>
                            <el-table-column prop="dutyDate" label="日期" width="60px"></el-table-column>
                            <el-table-column prop="weekDate" label="星期" width="60px"/>
                            <!-- <template v-for="item in userList" :key="index"> -->
                            <!-- <el-table-column v-for="(item,index) in userList" :prop="item.dutyDate" :label="item.userName" :key="index"> name == '台州气象台'? 'right':''
                            </el-table-column> -->
                            <!-- </template> -->
                
                            <el-table-column v-for="({name,id},index) in persons" :prop="name" :label="name" :key="index">
                            <!-- <el-table-column v-for="({name,id},index) in persons" :prop="name" :label="name" :key="index" :fixed="tableFixed(name,id)"> -->
                                <template slot-scope="scope">
                                    <span v-if="scope.row[id] && !editCol && name !== '首席'">
                                        <span v-for="item in postList" :key="item.id" v-if="scope.row[id] == item.id">{{item.name}}</span>
                                    </span>
                                    <span v-if="scope.row[id] && !editCol && name == '首席'">
                                        <span v-for="item in postUserList" :key="item.id" v-if="scope.row[id] == item.id">{{item.name}}</span>
                                    </span>
                                    <!-- <el-select v-model="scope.row[id]" @change="changeTelescopic(index,scope.row[id],scope.row,name,id)" placeholder="请选择" v-if="scope.row[id] && editCol" :class="`scheduling-${scope.row[id]}`"> -->
                                    <el-select v-model="scope.row[id]" @change="changeTelescopic(index,scope.row[id],scope.row,name,id)" placeholder="请选择" v-if="editCol && name !== '首席'" :class="`scheduling-${scope.row[id]}`">
                                        <el-option v-for="{name,id} in postList" :label="name" :value="id" :key="id"></el-option>
                                    </el-select>
                                    <el-select v-model="scope.row[id]" @change="changeTelescopic(index,scope.row[id],scope.row,name,id)" placeholder="请选择" v-if="editCol && name == '首席'" :class="`scheduling-${scope.row[id]}`">
                                        <el-option v-for="{name,id} in postUserList" :label="name" :value="id" :key="id"></el-option>
                                    </el-select>
                                </template>
                            </el-table-column>
                        </page-table>
                    </div>
            </el-card>
        </el-main>
    </el-container>
    <dialog-form title="文件导入" :visible.sync="visibleDialogFormItem" :getPayload="()=>getPayload()" :confirmDisabled="!formItem.orgId||!fileList" remote="requestDialogFormMenuItemInputAdd11"
      v-if="formItem" @success="submitSuccess">
        <template>
            <el-form-item label="文件选择" label-width="120px">
                <el-upload
                    class="upload-demo"
                    ref="upload"
                    :action="schedulingUpload()"
                    :before-upload="beforeAvatarUpload"
                    :on-preview="handlePreview"
                    :on-remove="handleRemove"
                    :on-success="handleAvatarSuccess"
                    :file-list="fileList"
                    :data="uploadParam"
                    :limit="1"
                    :on-exceed="handleExceed"
                    :auto-upload="false">
                    <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
                    <!-- <el-button style="margin-left: 10px;" size="small" type="success" @click="submitUpload">上传到服务器</el-button> -->
                    <div slot="tip" class="el-upload__tip">只能导入xls/xlsx文件，且不超过2M</div>
                </el-upload>
            </el-form-item>
            <el-form-item label="上传时间" label-width="120px">
                <el-date-picker v-model="query.monthTime" format="yyyy-MM" value-format="yyyy-MM" type="month" placeholder="选择月"></el-date-picker>
            </el-form-item>
        </template>
    </dialog-form>
</div>
</template>

<script>
import {
requestAllUserList,
requestDialogFormSchedulingDownload,
requestSchedulingList,
requestSchedulingOptionList,
requestSchedulingSxOptionList,
requestSchedulingDutyUser,
requestSchedulingUpdate,
requestSchedulingDownload,
requestSchedulingUpload
} from "@/remote/";
import {
    mapActions,mapGetters
} from 'vuex'
import {
    common,
    witchCommonList,
    withCommonLeftTree
} from '../../mixins/index';
export default {
    mixins: [common, witchCommonList, withCommonLeftTree],
    data() {
        return {
            loginInfo:null,
            fullscreenLoading: false,
            uploadParam:{},
            imageUrl: '',
            // fileList: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}],
            fileList: [],
            editCol: false,
            test:
            [
            {"dutyDate":"2020-04-04","week":"周一","jobName":"短临","admin":"短临","李四":"1短期","张三":"短临"},
            {"dutyDate":"2020-04-04","week":"周一","jobName":"短临","admin":"短临","李四":"2短期","张三":"短临"},
        ],
            selectData:[],
            query: {
                // XXXPROP_SCHEDULING_1: ''
                orgId: '',
                monthTime:''
            },
            persons: null,
            userList:null,
            postList:null,
            postUserList:null,
            pageTableList:null
        };
    },
    computed: {
        ...mapGetters(['accountOrgId']),
    },
    mounted() {
        const loginInfo = JSON.parse(localStorage.getItem('loginInfo',))
        this.loginInfo = loginInfo
        this.requestData()
    },
    methods: {
              handleRemove(file, fileList) {
        console.log(file, fileList);
      },
      handlePreview(file) {
        console.log(file);
      },
      handleExceed(files, fileList) {
        this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);
      },
      beforeRemove(file, fileList) {
        return this.$confirm(`确定移除 ${ file.name }？`);
      },
        getPayload(){
            this.$refs.upload.submit();
            // return 
        },
        getFormItemByInputItem(item={}) {
            const {
                lastItemClicked
            } = this;
            return {
                orgId:this.loginInfo.orgId,
                fileName:null,
            }
        },
        tableFixed(name,id){
            var isRight = null
            if(name == '管理员'){
                isRight = 'right'
            }
            if(name == '日期'){
                isRight = 'list'
            }
            if(name == '星期'){
                isRight = 'list'
            }
            return isRight
        },
        submitSuccess(res){
        // this.treeDataList = []
        // this.onConfirmUpdate()
        // this.requestData()
        },
        schedulingUpload(){
            this.uploadParam.orgId = this.loginInfo.orgId
            this.uploadParam.monthTime = this.query.monthTime
            return 'http://192.168.5.105:6001/ssd/business/ssd-business-duty/saveExcel'
        },
        requestData(){
        requestSchedulingOptionList({orgId:this.loginInfo.orgId,isNormal:'0'}).then(res =>{
            this.postList = res.data.list
            this.postList.unshift({label:'',id:''})
        })
        requestSchedulingSxOptionList({orgId:this.loginInfo.orgId,jobCode:'shouxi'}).then(res =>{
            this.postUserList = res.data.list
            this.postUserList.unshift({label:'',id:''})
        })
        requestSchedulingDutyUser({orgId:this.loginInfo.orgId}).then(res =>{
            this.persons = res.data
            this.persons.map(item=>{
                item.label = item.name,
                item.value = item.id
            })
        })
        requestSchedulingList({orgId:this.loginInfo.orgId}).then(res=>{
            // this.pageTableList = res.data.list
            this.query.monthTime = res.data.monthTime
        })
        },
        doTheThing(){

        },
        handleChange(files, fileList){
            console.log(files, fileList)
            this.formItem.fileName = files.name
            this.fileList = fileList
        },
        submitUpload() {
            // this.$refs.upload.submit();
        },
        //文件上传成功时的钩子
        handleAvatarSuccess(res, file) {
        console.log('handleAvatarSuccess:res:',res)
        console.log('handleAvatarSuccess:file:',file)
        // this.imageUrl = URL.createObjectURL(file.raw);
        this.fullscreenLoading = false;
        this.visibleDialogFormItem = false;
        this.$message.success(`导出成功`);
        this.formItem = {}
        this.fileList = []
        },

        //上传文件之前的钩子
        beforeAvatarUpload(file) {
        console.log(file)
        console.log(this.uploadParam)
        this.formItem.fileName = file.name
        const isXLS = file.type === 'application/vnd.ms-excel';
        const isXLSX = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
        const isLt2M = file.size / 1024 / 1024 < 2;

        if (!isXLS && !isXLSX) {
          this.$message.error('上传文件只能是 xls,xlsx 格式!');
        }
        if (!isLt2M) {
          this.$message.error('上传文件大小不能超过 2MB!');
        }
        this.fullscreenLoading = true;
        return (isXLS || isXLSX) && isLt2M;
      },

        //文件列表移除文件时的钩子
      handleRemove1(file, fileList) {
        console.log(file, fileList);
      },
      //点击文件列表中已上传的文件时的钩子
      handlePreview1(file) {
        console.log(file);
      },
      //文件超出个数限制时的钩子
      handleExceed1(files, fileList) {
        // this.$message.warning(`当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);
        this.$message.warning(`当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);
      },
      //删除文件之前的钩子
      beforeRemove1(file, fileList) {
        // return this.$confirm(`确定移除 ${ file.name }？`);
      },

        submitEdit(){
            this.editCol=!this.editCol
            if(!this.editCol && this.selectData.length > 0){
                // let params
                // this.selectData.forEach(i=>{
                //    if(i.userId == 'bf5df19b976d4381bb1a2f841ab544a7'){
                //         i.userIdItem = i.userId
                //         i.jobIdItem = i.jobId
                //         i.userId = i.jobIdItem
                //         i.jobId = 'bf5df19b976d4381bb1a2f841ab544a7'
                //         delete i.userIdItem
                //         delete i.jobIdItem
                //    }
                // })
                 requestSchedulingUpdate({orgId:this.loginInfo.orgId,month:this.query.monthTime,list:this.selectData}).then(res =>{
                     if(res.success){
                        this.requestData()
                     }
                    this.selectData = []
                })
                console.log(this.selectData)
            }else{this.selectData = []}
        },
        cancelEdit(){
            this.editCol=!this.editCol
            this.onConfirmUpdate()
        },
        changeTelescopic(index,jobId,scope,name,id){
            if(name == '首席'){
                this.selectData.push({'userId':jobId,'jobId':id,'dutyDate': this.query.monthTime + '-' + scope.dutyDate})
            }else{
                this.selectData.push({'userId':id,'jobId':jobId,'dutyDate': this.query.monthTime + '-' + scope.dutyDate})
            }
        },
        formatPayload(payload){
            const loginInfo = JSON.parse(localStorage.getItem('loginInfo',))
            this.loginInfo = loginInfo
            return payload.monthTime?  {
                'orgId':this.loginInfo.orgId,
                monthTime:payload.monthTime
            }:{
                'orgId':this.loginInfo.orgId,
            }
            // return payload
        },
        downloadExcel(){
                let param = {
                monthTime:this.query.monthTime,
                orgId:this.loginInfo.orgId,
            }
            requestSchedulingDownload(param).then(res=>{
                this.$message.success("下载完成");
            })
            // requestDialogFormSchedulingDownload().then(res =>{
                // window.location.href='http://www.jjzslsk.top/123.xlsx'
            // })
        },
        tableRowClassName({
            row,
            rowIndex
        }) {
            return row.isRest && 'rest';
        }
    },
};
</script>
<style lang="postcss" scoped>
.content-list{
    .upload-demo {
        display: inline-block;
    }
}
.upload-demo {
    .el-upload__tip {
        display: inline;
        margin-left:8px;
    }
}
</style>
<style>
.scheduling-bx {
    .el-input__inner {
        color: red;
    }
}

.page-wrapper.scheduling {
    tr.rest {
        background: rgba(253, 245, 230, 1);
    }
}
</style>
