SCHEDULING<template>
<div class="page-wrapper scheduling">
    <el-container>
        <el-main>
            <el-card class="box-card" shadow="never">
                <div slot="header" class="clearfix">
                    <span class="primary">排班管理</span>
                </div>
                <div class="text">
                    <div class="list">
                        <page-table ref="table" remote="requestSchedulingList" :formatPayload="formatPayload" :hidePagination="true" :row-class-name="tableRowClassName">
                        <!-- <page-table ref="table" :formatPayload="formatPayload" :row-class-name="tableRowClassName"> -->
                            <div class="actions" slot="actions">
                                <span class="title">选择月份</span>
                                <el-date-picker v-model="query.monthTime" format=" MM 月 dd 日" value-format="MM-dd" type="month" placeholder="选择月"></el-date-picker>
                                <c-button type="search" @click="search()">查询</c-button>
                                <c-button type="search" v-if="!editCol" @click="editCol=!editCol">编辑</c-button>
                                <c-button type="search" v-if="editCol" @click="submitEdit">保存</c-button>
                                <c-button type="search">EXCEL导入</c-button>
                                <c-button type="search" @click="downloadExcel()">导出</c-button>
                                <c-button type="search">打印</c-button>
                            </div>
                            <el-table-column prop="dutyDate" label="日期" width="60px"></el-table-column>
                            <el-table-column prop="weekDate" label="星期" width="60px" />
                            <!-- <template v-for="item in userList" :key="index"> -->
                            <!-- <el-table-column v-for="(item,index) in userList" :prop="item.dutyDate" :label="item.userName" :key="index">
                            </el-table-column> -->
                            <!-- </template> -->
                
                            <el-table-column v-for="({name,id},index) in persons" :prop="name" :label="name" :key="index">
                                <template slot-scope="scope">
                                    <span v-if="scope.row[id] && !editCol">
                                        <span v-for="item in postList" :key="item.id" v-if="scope.row[id] == item.id">{{item.name}}</span>
                                    </span>
                                    <!-- <el-select v-model="scope.row[id]" @change="changeTelescopic(index,scope.row[id],scope.row,name,id)" placeholder="请选择" v-if="scope.row[id] && editCol" :class="`scheduling-${scope.row[id]}`"> -->
                                    <el-select v-model="scope.row[id]" @change="changeTelescopic(index,scope.row[id],scope.row,name,id)" placeholder="请选择" v-if="editCol" :class="`scheduling-${scope.row[id]}`">
                                        <el-option v-for="{name,id} in postList" :label="name" :value="id" :key="id"></el-option>
                                    </el-select>
                                </template>
                            </el-table-column>

                            <!-- <el-table-column prop="XXXPROP_SCHEDULING_sx" label="首席" width="80px" /> -->
                        </page-table>
                    </div>
                </div>
            </el-card>
        </el-main>
    </el-container>
</div>
</template>

<script>
import {
requestUserList,
requestDialogFormSchedulingDownload,
requestSchedulingList,
requestPostList,
requestSchedulingUpdate
} from "@/common/remote/";
import {
    common,
    witchCommonList
} from '../../mixins/index';
export default {
    mixins: [common, witchCommonList],
    data() {
        return {
            editCol: false,
            test:
            [
            {"dutyDate":"2020-04-04","week":"周一","jobName":"短临","admin":"短临","李四":"1短期","张三":"短临"},
            {"dutyDate":"2020-04-04","week":"周一","jobName":"短临","admin":"短临","李四":"2短期","张三":"短临"},
        ],
            selectData:[],
            query: {
                // XXXPROP_SCHEDULING_1: ''
                orgId: '27d87bbe1da1425fa9783e9eea6c7b40',
                // monthTime:'2020-04'
            },
            persons: null,
            userList:null,
            postList:null
        };
    },
    mounted() {
        // requestSchedulingList({orgId:'27d87bbe1da1425fa9783e9eea6c7b40'}).then(res=>{
        //     this.userList = res.data.list
        //     console.log(this.userList)
        // })

        const loginInfo = JSON.parse(localStorage.getItem('loginInfo',))
        requestPostList({orgId:loginInfo.orgId,pageIndex:'1',pageSize:'20'}).then(res =>{
            this.postList = res.data.list
        })
        requestUserList().then(res=>{
            this.persons = res.data.list
            // this.persons.map(item=>{
            //     item.label = item.name,
            //     item.value = item.id
            // })
        })
        // setTimeout(() => {
        //     this.persons = [{
        //         "name": "张三",
        //         "id": "XXXPROP_SCHEDULING_ZS"
        //     }, {
        //         "name": "李四",
        //         "id": "XXXPROP_SCHEDULING_LS"
        //     }, {
        //         "name": "李1",
        //         "id": "XXXPROP_SCHEDULING_L1"
        //     }, {
        //         "name": "李2",
        //         "id": "XXXPROP_SCHEDULING_L2"
        //     }, {
        //         "name": "李3",
        //         "id": "XXXPROP_SCHEDULING_L3"
        //     }, {
        //         "name": "李4",
        //         "id": "XXXPROP_SCHEDULING_L4"
        //     }, {
        //         "name": "李5",
        //         "id": "XXXPROP_SCHEDULING_L5"
        //     }]
        // }, 1000);
    },
    methods: {
        submitEdit(){
            this.editCol=!this.editCol
            if(!this.editCol && this.selectData.length > 0){
                 requestSchedulingUpdate({list:this.selectData}).then(res =>{
                    console.log(res)
                })
                console.log(this.editCol,this.selectData)
            }else{this.selectData = []}
        },
        changeTelescopic(index,jobId,scope,name,id){
            // console.log(index,jobId,scope.dutyDate,name,id);
            this.selectData.push({userId:id,jobId:jobId,dutyDate:scope.dutyDate})
            console.log(this.selectData)
        },
        formatPayloadLeft(payload){
            console.log("payload:1",payload)
            return payload.monthTime?  {
                pageSize: 5,
                'orgId':'27d87bbe1da1425fa9783e9eea6c7b40',
                pageIndex: 1,
                monthTime:payload.monthTime
            }:{
                pageSize: 5,
                'orgId':'27d87bbe1da1425fa9783e9eea6c7b40',
                pageIndex: 1,
            }

            // return payload
        },
        downloadExcel(){
            requestDialogFormSchedulingDownload().then(res =>{
                console.log(res)
            })
        },
        tableRowClassName({
            row,
            rowIndex
        }) {
            return row.isRest && 'rest';
        }
    },
};
</script>
<style>
.scheduling-bx {
    .el-input__inner {
        color: red;
    }
}

.page-wrapper.scheduling {
    tr.rest {
        background: rgba(253, 245, 230, 1);
    }
}
</style>
