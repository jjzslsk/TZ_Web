<template>
  <div class="product-made-home">
    <div class="wrap-box">
    <div class="left-box">
      <common-left-tree @success="submitSuccess" title="产品导航" :isHeader='true' :data="treeData" @click-item="onTreeClickItem" :defaultExpandAll="true">
        <div slot="head-search" class="head-search">
            <el-input placeholder="请输入内容" prefix-icon="el-icon-search" v-model="searchText"></el-input>
        </div>
      <div slot="append" class="">
        <div>
        <span class="title">分类操作：</span><common-left-tree-actions @success="submitSuccess" :lastItemClicked="lastItemClicked" @append="onTreeAppend" @edit="onTreeEdit" @delete="onTreeDelete('requestProductClassTreeDel')"></common-left-tree-actions>
        </div>
        <div>
        <span class="title">产品操作：</span><common-left-tree-actions @success="submitSuccess" :lastItemClicked="lastItemClicked" @append="onTreeAppendMinor" @edit="onTreeEditMinor" @delete="onTreeDeleteMinor('requestProductClassTreeDelMinor')"></common-left-tree-actions>
        </div>
      </div>
      </common-left-tree> 
    </div>
      <!-- <div class="left-box">
        <div class="top-title">
          <div class="text">产品导航</div>
        </div>
        <div class="content-box">
            <el-input placeholder="请输入内容" prefix-icon="el-icon-search" v-model="searchText"></el-input>
            <div class="tree-box">
              <el-tree ref="tree" :data="treeData" @node-click="handleNodeClick" default-expand-all :filter-node-method="filterNode"></el-tree>
            </div>
        </div>
        <div class="tool-box">
          <div class="line-interval"></div>
          <div class="classify-tool">
            <span class="title">分类操作</span>
            <div class="icon-box">
              <i class="iconfont tianjia" @click="inputItemClassify({})"></i>
              <i class="iconfont bianji" @click="inputItemClassifyEdit({})"></i>
              <i class="iconfont shanchu" @click="delItemProductClassify()"></i>
            </div>
          </div>
          <div class="classify-tool product-tool">
            <span class="title">产品操作</span>
            <div class="icon-box">
              <i class="iconfont tianjia" @click="inputItemProduct({})"></i>
              <i class="iconfont bianji"></i>
              <i class="iconfont shanchu"></i>
            </div>
          </div>
        </div>
      </div> -->
      <dialog-form @success="submitSuccess" :title="dialogTitle + '模板分类'" :visible.sync="visibleDialogFormLeftTree" :getPayload="()=>formLeftTree" :confirmDisabled="!formLeftTree.pid||formLeftTree.pid===undefined" remote="requestDialogFormAreaTreeInput" v-if="formLeftTree">
          <!-- <template v-slot:default="{ form }"> -->
          <template>
              <el-form-item label="分类名称" label-width="120px">
                  <el-input v-model="formLeftTree.name" autocomplete="off"></el-input>
              </el-form-item>
              <el-form-item label="上级分类" label-width="120px">
                  <el-select v-model="formLeftTree.pid" placeholder="请选择">
                      <el-option v-for="item in treeDataList" :label="item.label" :value="item.id" :key="item.id"></el-option>
                  </el-select>
              </el-form-item>
              <!-- <el-form-item label="描述" label-width="120px">
                  <el-input v-model="formLeftTree.remark" autocomplete="off"></el-input>
              </el-form-item> -->
              <!-- <el-form-item label="排序" label-width="120px">
                  <el-select v-model="formLeftTree.sort" placeholder="请选择">
                      <el-option label="1" value="330000"></el-option>
                      <el-option label="2" value="330002"></el-option>
                  </el-select>
              </el-form-item> -->
              <el-form-item label="排序" label-width="120px">
                  <el-input v-model="formLeftTree.sort" autocomplete="off"></el-input>
              </el-form-item>
          </template>
      </dialog-form>

      <dialog-form @success="submitSuccess" :title="dialogTitle + '模板'" :visible.sync="visibleDialogformLeftTreeMinor" :getPayload="()=>formItem" :confirmDisabled="!formItem.XXXPROP_AREA_1" remote="requestDialogFormAreaItemInput" v-if="formItem">
          <!-- <template v-slot:default="{ form }"> -->
          <template>
              <el-form-item label="模板名称" label-width="120px">
                  <!-- <el-input v-model="formLeftTreeMinor.XXXPROP_AREA_2" autocomplete="off"></el-input> -->
              </el-form-item>
                <el-form-item label="模板类型" label-width="120px">
                  <el-radio v-model="radioType" label="word">word</el-radio>
                  <el-radio v-model="radioType" label="txt">txt</el-radio>
                </el-form-item>
                <el-form-item label="数据来源" label-width="120px">
                  <el-checkbox-group v-model="checkList">
                    <el-checkbox v-for="item in tabsList" :label="item.name" :key="item.id"></el-checkbox>
                  </el-checkbox-group>
                </el-form-item>
              <!-- <el-form-item label="排序" label-width="120px">
                  <el-select v-model="formLeftTreeMinor.sort" placeholder="请选择">
                      <el-option label="1" value="1"></el-option>
                      <el-option label="2" value="2"></el-option>
                  </el-select>
              </el-form-item> -->
          </template>
      </dialog-form>
      <div class="center-box">
        <div class="top-title no-border">
          <div class="text">{{topTitle || '产品内容'}}</div>
          <el-button type="primary" size="small" @click="saveModule()">保存模板</el-button>
        </div>
        <div v-if="isIframe" class="iframe-content-box">
          <page-office :url="docPath" id="products"></page-office>
        </div>
        <div v-else class="content-box">
          <div class="weather-forecast-box"> 
            <div class="forecast-title">天气预报</div>
            <div class="line-thick"></div>
            <div class="line-thin"></div>
            <div class="forecast-text">
              <div v-for="(item,index) in forecastList" :key="index" class="item-list">{{item.text}}</div>
            </div>
          </div>
        </div>
      </div>
      <div class="right-box">
        <div class="top-title">
          <div class="text">产品标签</div>
        </div>
        <div class="content-box">
          <div class="tab">
            <template>
            <el-tabs v-model="tabsListValue" type="card" @tab-click="handleClick">
              <el-tab-pane :key="item.name"
              v-for="(item,index) in tabsList"
              :label="item.title"
              :name="item.name">
              <el-tree
              :data="tabTree"
              show-checkbox
              default-expand-all
              node-key="id"
              ref="tree"
              highlight-current
              :props="defaultProps">
              </el-tree>
              </el-tab-pane>
            </el-tabs>
          </template>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import {
    requestProductClassTreeDel,
    requestProductClassTreeList,
    requestProductTabTreeList,
    requestProductLabelTreeList
} from "@/common/remote/";
import PageOffice from '@/components/page-office/'
import {
    common,
    witchCommonList,
    withCommonLeftTree
} from '../../mixins/index';
import {
    mapActions,mapGetters
} from 'vuex'
  export default {
    mixins: [common, witchCommonList, withCommonLeftTree],
    components: {
        PageOffice
    },
    data() {
      return {
        defaultProps: {
          children: 'children',
          label: 'label'
        },
        tabTree: [],
        menuData:[],
        visibleDialogFormItemClassify: false,
        visibleDialogFormItemProduct: false,
        formItem: null,
        radioType:'word',
        checkList: ['值班记录','每日预报产品'],
        isIframe:false,
        topTitle:'',
        docPath: '', // 文档的地址
        searchText:"",
        tabsListValue: '2',
        tabsList: [],
        treeData:[],   
        forecastList:[
          {
            text:"Weather_Content",
          },
          {
            text:"明天早晨最低气温：TaiZhou_MinTemp",
          },
          {
            text:"明天白天最高气温：TaiZhou_Max",
          },
          {
            text:"Weather_Content",
          },
          {
            text:"Weather_Content",
          }
        ],
        treeDataList:[],
      }
    },
    watch: {
      searchText(val) {
        this.$refs.tree.filter(val);
      }
    },
    computed:{
      ...mapGetters(['accountOrgId']),
    },
    mounted(){
        this.requestData()
    },
    methods: {
      handleClick(tab, event) {
        console.log(tab, event);
      },
      submitSuccess(){
          this.treeDataList = []
          this.onConfirmUpdate()
          this.requestData()
      },
      onConfirmUpdate(res) {
            console.log('2')
        },
      //初始化页面数据
      requestData(){
        requestProductClassTreeList().then(res => {
          this.treeData = res.data.list
          this.treeDataList = []
          this.treeOfList(res.data.list)
        });
        requestProductTabTreeList().then(res => {
          this.tabTree = res.data.list
        });
        requestProductLabelTreeList().then(res => {
          this.tabsList = res.data.list
          console.log(res)
        });
      },
        ...mapActions(['gotAccountInfo','getAccountInfo','getMenuInfo']),
      filterNode(value, data) {
        if (!value) return true;
        return data.label.indexOf(value) !== -1;
      },
      treeOfList(tree){
        tree.map(item => {
          this.treeDataList.push(item)
          if(item.children){
            this.treeOfList(item.children)
          }
        })
      },
      delItemProductClassify() {
          let vm = this
          if(vm.topTitle){
            requestProductClassTreeDel({
                id:vm.topTitle
            }).then(res => {
                vm.$message.success("删除成功!");
                // this.$refs.table.fetchData();
            });
          }
        },
      saveModule(){

      },
      handleNodeClick(data) {
        let vm = this
        console.log(data)
        vm.formItem = data
        vm.topTitle = ''
        vm.topTitle = data.label;
        if(data.label == '789'){
          vm.isIframe = true
          // vm.docPath = `http://222.216.5.171:8891/gxims//railway/showWordForecastMonth.action?productId=20200228164618013583871`;
          vm.docPath = `/product/ssd-page-office/openProductWord?productInfoId=P20000`;
        } else {
          vm.isIframe = false
        }
      },

      inputItemClassifyEdit(item) {
        if(!this.formItem){
          alert('请选择父节点')
          return
        }
            this.formItem = this.getFormItemByInputItemClassify(item);
            this.visibleDialogFormItemClassify = true;
        },

      inputItemClassify(item) {
            this.formItem = this.getFormItemByInputItemClassify(item);
            this.visibleDialogFormItemClassify = true;
        },
        inputItemProduct(item) {
            this.formItem = this.getFormItemByInputItemProduct(item);
            this.visibleDialogFormItemProduct = true;
        },
            getFormItemByInputItemClassify(item = {}) {
            this.getAccountInfo().then(res =>{//获取当前用户机构id
                if(res.success && res.data) {
                  this.formItem.orgId = res.data.orgId
                }
            });
            const {
                lastItemClicked
            } = this;
            const lastKeyItemClicked = lastItemClicked && lastItemClicked.id;
            console.log(lastItemClicked)
            return {
                // "XXXPROP_ORGAN_id": "",
                "remark": "123",
                "pid": "",
                "name": "",
                "sort": "",
                "orgId": "",
                // "XXXPROP_ORGAN_4": lastItemClicked && (lastItemClicked.XXXPROP_ORGAN_4 || 0) + 1 + "",
                // "XXXPROP_ORGAN_5": lastKeyItemClicked,
                // lastItemClicked,
                // ...item
            };
        },
        getFormItemLeftByInputItem(item) {
          const {
            lastItemClicked
            } = this;
            console.log('lastItemClicked:',lastItemClicked)
            console.log("item:",item)
            return item ?  {
                id:item.id,
                name:item.label,
                sort:item.sort,
                pid:item.parentId,
                orgId:item.userOrgId
                } : {
                orgId:this.accountOrgId,
            };
        },
        getFormItemLeftByInputItemMinor(item) {
          const {
            lastItemClicked
            } = this;
            console.log('lastItemClicked:',lastItemClicked)
            console.log("item:",item)
            return {123:'123'}
            // return item ?  {name:item.label,sort:item.sort,pid:item.parentId,orgId:this.accountOrgId} : {
            //     name: '',
            //     sort: '',
            //     pid: lastItemClicked.pid,
            //     orgId:this.accountOrgId
            // };
        },
          getFormItemByInputItemProduct(item = {}) {
            const {
                lastItemClicked
            } = this;
            const lastKeyItemClicked = lastItemClicked && lastItemClicked.id;
            return {
                // "XXXPROP_ORGAN_id": "",
                "XXXPROP_ORGAN_1": "",
                "XXXPROP_ORGAN_2": "",
                "XXXPROP_ORGAN_3": "",
                "XXXPROP_ORGAN_4": lastItemClicked && (lastItemClicked.XXXPROP_ORGAN_4 || 0) + 1 + "",
                "XXXPROP_ORGAN_5": lastKeyItemClicked,
                "XXXPROP_ORGAN_6": "",
                lastItemClicked,
                ...item
            };
        },
    },
  }
</script>

<style lang='postcss' scoped>
  .product-made-home{
    background: #F6F6F6;
    padding: 15px 20px 0 0;
    height: 100%;
    box-sizing: border-box;
    .wrap-box{
      display: flex;
      justify-content: space-between;
      .left-box{
        width: 280px;
        position: relative;
        background: #fff;
        .content-box{
          padding: 10px 20px 0;
          .tree-box{
            margin-top: 23px;
          }
        }
        .tool-box{
          padding: 30px 20px;
          position: relative;
          bottom: 0px;
          .line-interval{
            width: 100%;
            height: 1px;
            background: #E4E7ED;
            margin-bottom:30px;
          }
          .classify-tool{
            display: flex;
            justify-content: space-between;
            height: 35px;
            line-height: 35px;
            .title{
              font-size:14px;
              font-family:Microsoft YaHei;
              color:rgba(96,98,102,1);
            }
            .icon-box{
              border:1px solid rgba(235, 238, 245, 1);
              border-radius:6px;
              width: 165px;
              .iconfont{
                display: inline-block;
                width: 30%;
                text-align: center;
                font-size:15px;
                border-right:1px solid #EBEEF5;
              }
              .iconfont:last-child{
                border-right:none;
              }
              .tianjia{
                color: #67C241;
              }
              .bianji{
                color: #409EFF
              }
              .shanchu{
                color: #F46D6A;
              }
            }
          }
          .product-tool{
            margin-top: 14px;
          }
        }
      }
      .center-box{
        flex: 1;
        background: #fff;
        margin-left: 18px;
        .content-box{
          padding: 0 30px 33px;
          .weather-forecast-box{
            background:rgba(242,246,252,1);
            border:1px solid rgba(204,204,204,1);
            border-radius:4px;
            padding:0 99px;
            .forecast-title{
              font-size:24px;
              font-family:Microsoft YaHei;
              color:rgba(64,158,255,1);
              padding:68px 20px 0px;
              text-align: center;
            }
            .line-thick{
              height:3px;
              background:rgba(64,158,255,1);
              margin-top: 20px;
            }
            .line-thin{
              height:1px;
              background:rgba(64,158,255,1);
              margin-top: 4px;
            }
            .forecast-text{
              margin-top: 43px;
              .item-list{
                font-size:16px;
                font-family:Microsoft YaHei;
                color:rgba(48,49,51,1);
                margin-bottom:10px;
              }
            }
          }
        }
      }
      .right-box{
        flex: 0.5;
        background: #fff;
        margin-left: 22px;
        .content-box{
        padding: 10px 20px 0 20px;
        .tab{

          }
        }
      }
    }
    .top-title{
      padding: 20px;
      border-bottom: 1px solid rgb(26, 87, 211);
      display: flex;
      justify-content: space-between;
      .text{
        font-size:18px;
        font-family:Microsoft YaHei;
        font-weight:400;
        color:rgba(48,49,51,1);
      }
    }
    .iframe-content-box {
      position: relative;
      display: flex;
      flex-direction: column;
      flex: 1;
      margin-left: 15px;
      height: calc(100%-58px);
    }
    .no-border{
      border-bottom: none;
    }
  }

.title{
  font-size:14px;
  font-family:Microsoft YaHei;
  color:rgba(96,98,102,1);
}
.common-left {
  width: 100% !important;
  margin-right: 0; 
}
.common-left .el-card {
  border: 0px solid #ebeef5;
}
.common-left-tree-actions{
    display: inline-block;
    text-align: center;
    padding: 1em 0;
}
.left-box .text {
  margin-top: 15px;
}
</style>
<style lang='postcss'>
.product-made-home{
  .left-box{
    .el-input__inner{
      border-radius: 16px;
    }
  }
}
</style>